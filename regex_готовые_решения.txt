Взять только все буквы
        \p{L}+(/sign/inter?fr=1&fb=1)!!preg_match_all()
Именованное сохранение
        \b(?<year>\d\d\d\d)-(?<month>\d\d)-(?<day>\d\d)\b
        Параметры: нет
        Диалекты: .NET, PCRE 7, Perl 5.10, Ruby 1.9
        \b(?’year’\d\d\d\d)-(?’month’\d\d)-(?’day’\d\d)\b
        Параметры: нет
        Диалекты: .NET, PCRE 7, Perl 5.10, Ruby 1.9
        \b(?P<year>\d\d\d\d)-(?P<month>\d\d)-(?P<day>\d\d)\b
        Параметры: нет
        Диалекты: PCRE 4 and later, Perl 5.10, Python
Именованные обратные ссылки
        \b\d\d(?<magic>\d\d)-\k<magic>-\k<magic>\b
        Параметры: нет
        Диалекты: .NET, PCRE 7, Perl 5.10, Ruby 1.9
        \b\d\d(?’magic’\d\d)-\k’magic’-\k’magic’\b
        Параметры: нет
        Диалекты: .NET, PCRE 7, Perl 5.10, Ruby 1.9
        \b\d\d(?P<magic>\d\d)-(?P=magic)-(?P=magic)\b
        Параметры: нет
        Диалекты: PCRE 4 and later, Perl 5.10, Python
Гугол
        \b\d{100}\b
        Параметры: нет
        Диалекты: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Шестнадцатеричное число
        \b[a-f0-9]{1,8}\b
        Параметры: нечувствительность к регистру символов
        Диалекты: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Шестнадцатеричное число с необязательным суффиксом
        \b[a-f0-9]{1,8}h?\b
        Параметры: нечувствительность к регистру символов
        Диалекты: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
Вещественное число
        \d*\ . \d+(e\d+)?
        Параметры: нечувствительность к регистру символов
        Диалекты: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
        //---------------------------
        Задача
                Создать регулярное выражение, совпадающее с  парой тегов <p> и  </p>
                языка разметки XHTML и текстом между ними. Текст между этими те-
                гами может содержать другие теги XHTML.
        Решение
                <p> . *?</p>
        Параметры: точке соответствуют границы строк
        Диалекты: .NET, Java, JavaScript, PCRE, Perl, Python, Ruby
        //---------------------------
        Задача
                В предыдущем рецепте описывались различия между максимальными
                и  минимальными квантификаторами, и  как они выполняют возврат.
                В некоторых ситуациях в возвратах нет никакой необходимости.

                В выражении \b\d+\b используется максимальный квантификатор,
                а  в выражении \b\d+?\b   – минимальный. Оба они совпадают с  це-
                лым числом. В одном и том же тексте они обнаруживают одно и то же
                совпадение. Любые выполняемые ими возвраты не являются необхо-
                димыми. Нужно переписать это регулярное выражение и явно ликви-
                дировать все возвраты, что обеспечит более высокую производитель-
                ность.
        Решение
                \b\d++\b
        //----------------------------
        Задача
                Создать единственное регулярное выражение, совпадающее с  целым
                файлом HTML, которое будет проверять наличие тегов html, head, title
                и body и их вложенность. Выражение не должно совпадать с файлами
                HTML, в которых отсутствуют требуемые теги.
        Решение
                <html>(?> . *?<head>)(?> . *?<title>)(?> . *?</title>)(?> . *?</head>)(?> . *?<body[^>]*>)(?> . *?</body>) . *?</html>
                Параметры: нечувствительность к регистру символов, точке соответствуют границы строк
                Диалекты: .NET, Java, PCRE, Perl, Ruby
        Взять всё что внутри тега
                (?<=<\w>)\w+
